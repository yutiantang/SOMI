"wave_4" = 4)
) %>%
ggalluvial::is_alluvia_form()
ds_use_visual <- ds_use2 %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4)
)
ggalluvial::is_alluvia_form(ds_use_visual)
names(ds_use_visual)
ggplot(as.data.frame(ds_use_visual),
aes(y = CATS, axis1 = rep, axis2 = Age)) +
geom_alluvium(aes(fill = Age), width = 1/12) +
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Gender", "Dept"), expand = c(.05, .05)) +
scale_fill_brewer(type = "qual", palette = "Set1") +
ggtitle("UC Berkeley admissions and rejections, by sex and department")
ggplot(as.data.frame(ds_use_visual),
aes(y = CATS, axis1 = rep, axis2 = Age)) +
geom_alluvium(aes(fill = Age), width = 1/12) +
geom_stratum(width = 1/12, fill = "black", color = "grey")
ds_use_visual <- ds_use2 %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4)
) %>%
dplyr::mutate(
CATS = dplyr::case_when(is.na(CATS)~"missing")
)
ggalluvial::is_alluvia_form(ds_use_visual)
ggplot(as.data.frame(ds_use_visual),
aes(y = CATS, axis1 = rep, axis2 = Age)) +
geom_alluvium(aes(fill = Age), width = 1/12) +
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Gender", "Dept"), expand = c(.05, .05)) +
scale_fill_brewer(type = "qual", palette = "Set1") +
ggtitle("UC Berkeley admissions and rejections, by sex and department")
ggplot(as.data.frame(ds_use_visual),
aes(y = CATS, axis1 = rep, axis2 = Age)) +
geom_alluvium(aes(fill = Age), width = 1/12) +
geom_stratum(width = 1/12, fill = "black", color = "grey")
ggplot(as.data.frame(ds_use_visual),
aes(y = CATS, axis1 = rep)) +
geom_alluvium(aes(fill = Age), width = 1/12)
ggplot(as.data.frame(ds_use_visual),
aes(y = CATS, axis1 = rep))
ggplot(as.data.frame(ds_use_visual),
aes(y = CATS, axis1 = rep)) +
geom_alluvium(aes(fill = Age), width = 1/12)
ds_use_visual <- ds_use2 %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4)
)
ggplot(as.data.frame(ds_use_visual),
aes(y = CATS, axis1 = rep)) +
geom_alluvium(aes(fill = Age), width = 1/12)
ds_use_visual <- ds_use2 %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4)
) %>%
dplyr::mutate(
CATS = dplyr::case_when(is.na(CATS)~"missing",
!is.na(CATS)~CATS)
)
ds_use_visual <- ds_use2 %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4)
) %>%
dplyr::mutate(
CATS = dplyr::case_when(is.na(CATS)~"missing",
TRUE~CATS)
)
ds_use_visual <- ds_use2 %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4),
CATS = dplyr::if_else(is.na(CATS), "missing", CATS)
)
ds_use_visual <- ds_use2 %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4),
CATS = dplyr::if_else(is.na(CATS), "missing", as.character(CATS))
)
View(ds_use_visual)
ggalluvial::is_alluvia_form(ds_use_visual)
ggplot(as.data.frame(ds_use_visual),
aes(y = CATS, axis1 = rep)) +
geom_alluvium(aes(fill = Age), width = 1/12)
ds_use_visual <- ds_use2 %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4),
CATS = dplyr::if_else(is.na(CATS), "missing", as.character(CATS))
) %>%
table(., useNA = "always")
View(ds_use_visual)
aa<-table(ds_use_visual$CATS, ds_use_visual$rep, ds_use_visual$Age, useNA = "always")
aa
names(ds_use2)
names(ds_use0)
#-----visual----------------------
baseline <- ds_use2 %>%
dplyr::filter(rep=="wave_1") %>%
dplyr::select(ID, CATS)
ds_use_visual <- ds_use2 %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4),
CATS = dplyr::if_else(is.na(CATS), "missing", as.character(CATS))
) %>%
dplyr::left_join(baseline, by="ID")
mean(baseline$CATS)
hist(baseline$CATS)
#-----visual----------------------
baseline <- ds_use2 %>%
dplyr::filter(rep=="wave_1") %>%
dplyr::select(ID, CATS) %>%
dplyr::mutate(
cate_baseline_level = dplyr::if_else(CATS >= 28, "high", "low")
)
ds_use_visual <- ds_use2 %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4),
CATS = dplyr::if_else(is.na(CATS), "missing", as.character(CATS))
) %>%
dplyr::left_join(baseline, by="ID")
View(ds_use)
#-----visual----------------------
baseline <- ds_use2 %>%
dplyr::filter(rep=="wave_1") %>%
dplyr::select(ID, CATS) %>%
dplyr::mutate(
cate_baseline_level = dplyr::if_else(CATS >= 28, "high", "low")
) %>%
dplyr::select(-CATS)
ds_use_visual <- ds_use2 %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4),
CATS = dplyr::if_else(is.na(CATS), "missing", as.character(CATS))
) %>%
dplyr::left_join(baseline, by="ID") %>%
spread(CATS, rep, cate_baseline_level)
ds_use_visual <- ds_use2 %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4),
CATS = dplyr::if_else(is.na(CATS), "missing", as.character(CATS))
) %>%
dplyr::left_join(baseline, by="ID") %>%
spread(CATS, ID)
View(ds_use_visual)
names(use)
ds_use_visual <- use %>%
dplyr::mutate(
cate_baseline_level = dplyr::if_else(baseline >= 28, "high", "low")
) %>%
dplyr::select(wave_1, wave_2, wave_3, wave_4, cate_baseline_level)
ds_use_visual <- use %>%
dplyr::mutate(
cate_baseline_level = dplyr::if_else(baseline >= 28, "high", "low")
) %>%
dplyr::select(wave_1, wave_2, wave_3, wave_4, cate_baseline_level) %>%
group_by(wave_1, wave_2, wave_3, wave_4) %>%
summarise(n = n()) %>%
ungroup()
ds_use_visual
View(ds_use_visual)
ds_use_visual <- use %>%
dplyr::mutate(
rep1 = dplyr::if_else(wave_1 >= 28, "high", "low"),
rep2 = dplyr::if_else(wave_2 >= 28, "high", "low"),
rep3 = dplyr::if_else(wave_3 >= 28, "high", "low"),
rep4 = dplyr::if_else(wave_4 >= 28, "high", "low"),
) %>%
#dplyr::select(wave_1, wave_2, wave_3, wave_4) %>%
group_by(rep1, rep2, rep3, rep4) %>%
summarise(n = n()) %>%
ungroup()
ds_use_visual
ds_use_visual <- use %>%
dplyr::mutate(
rep1 = dplyr::if_else(wave_1 >= 28, "high", "low"),
rep2 = dplyr::if_else(wave_2 >= 28, "high", "low"),
rep3 = dplyr::if_else(wave_3 >= 28, "high", "low"),
rep4 = dplyr::if_else(wave_4 >= 28, "high", "low"),
) %>%
#dplyr::select(wave_1, wave_2, wave_3, wave_4) %>%
group_by(rep1, rep2, rep3, rep4) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate_at(vars(-n), funs(factor()))
ds_use_visual <- use %>%
dplyr::mutate(
rep1 = dplyr::if_else(wave_1 >= 28, "high", "low"),
rep2 = dplyr::if_else(wave_2 >= 28, "high", "low"),
rep3 = dplyr::if_else(wave_3 >= 28, "high", "low"),
rep4 = dplyr::if_else(wave_4 >= 28, "high", "low"),
) %>%
#dplyr::select(wave_1, wave_2, wave_3, wave_4) %>%
group_by(rep1, rep2, rep3, rep4) %>%
summarise(n = n()) %>%
ungroup()
install.packages("alluvial")
library(alluvial)
alluvial(ds_use_visual[,1:4], freq=ds_use_visual$n,
col = ifelse(ds_use_visual$rep4 == "depressed", "#ff0000", "#D3D3D3"),
axis_labels = c("Year 1", "Year 2", "Year 3", "Year 4"),
cex = 0.7)
ds_use_visual <- use %>%
dplyr::mutate(
rep1 = dplyr::if_else(wave_1 >= 28, "high", "low"),
rep2 = dplyr::if_else(wave_2 >= 28, "high", "low"),
rep3 = dplyr::if_else(wave_3 >= 28, "high", "low"),
rep4 = dplyr::if_else(wave_4 >= 28, "high", "low"),
) %>%
#dplyr::select(wave_1, wave_2, wave_3, wave_4) %>%
group_by(rep1, rep2, rep3, rep4) %>%
summarise(n = n()) %>%
ungroup() %>%
dplyr::mutate(
n= as.factor(n)
)
alluvial(ds_use_visual[,1:4], freq=ds_use_visual$n,
col = ifelse(ds_use_visual$rep4 == "depressed", "#ff0000", "#D3D3D3"),
axis_labels = c("Year 1", "Year 2", "Year 3", "Year 4"),
cex = 0.7)
#-----visual----------------------
baseline <- ds_use2 %>%
dplyr::filter(rep=="wave_1") %>%
dplyr::select(ID, CATS) %>%
dplyr::mutate(
cate_baseline_level = dplyr::if_else(CATS >= 28, "high", "low")
) %>%
dplyr::select(-CATS)
ds_use_visual <- use %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4),
CATS = dplyr::if_else(is.na(CATS), "missing", as.character(CATS))
) %>%
dplyr::left_join(baseline, by="ID")
ds_use_visual <- use %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4),
CATS = dplyr::if_else(is.na(CATS), "missing", as.character(CATS))
)
ds_use_visual <- use %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4),
#CATS = dplyr::if_else(is.na(CATS), "missing", as.character(CATS))
) %>%
dplyr::left_join(baseline, by="ID")
ds_use_visual <- ds_use %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4),
#CATS = dplyr::if_else(is.na(CATS), "missing", as.character(CATS))
) %>%
dplyr::left_join(baseline, by="ID")
ds_use_visual <- ds_use %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4),
#CATS = dplyr::if_else(is.na(CATS), "missing", as.character(CATS))
) %>%
dplyr::left_join(baseline, by="ID") %>%
dplyr::select(
cate_baseline_level, rep, CATS
)
alluvial_ts(dat=ds_use_visual, wave = .4)
ds_use_visual <- ds_use %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4),
CATS = dplyr::if_else(is.na(CATS), "missing", as.character(CATS))
) %>%
dplyr::left_join(baseline, by="ID") %>%
dplyr::select(
cate_baseline_level, rep, CATS
)
alluvial_ts(dat=ds_use_visual, wave = .4)
ds_use_visual <- ds_use %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4),
#CATS = dplyr::if_else(is.na(CATS), "missing", as.character(CATS))
) %>%
dplyr::left_join(baseline, by="ID") %>%
dplyr::select(
cate_baseline_level, rep, CATS
)
data(Refugees)
reshape2::dcast(Refugees, country ~ year, value.var = 'refugees')
d <- Refugees
set.seed(39) # for nice colours
cols <- hsv(h = sample(1:10/10), s = sample(3:12)/15, v = sample(3:12)/15)
View(Refugees)
View(Refugees)
class(ds_use_visual$CATS)
alluvial_ts(dat=ds_use_visual, wave = .4, border=NA)
ds_use_visual <- ds_use %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4),
CATS = dplyr::if_else(is.na(CATS), "missing", as.factor(CATS))
) %>%
dplyr::left_join(baseline, by="ID") %>%
dplyr::select(
cate_baseline_level, rep, CATS
)
ds_use_visual <- ds_use %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4),
CATS = dplyr::if_else(is.na(CATS), .missing, as.factor(CATS))
) %>%
dplyr::left_join(baseline, by="ID") %>%
dplyr::select(
cate_baseline_level, rep, CATS
)
ds_use_visual <- ds_use %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4),
CATS = dplyr::if_else(is.na(CATS), NA, as.factor(CATS))
) %>%
dplyr::left_join(baseline, by="ID") %>%
dplyr::select(
cate_baseline_level, rep, CATS
)
ds_use_visual <- ds_use %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4),
CATS = dplyr::if_else(is.na(CATS), NA, CATS)
) %>%
dplyr::left_join(baseline, by="ID") %>%
dplyr::select(
cate_baseline_level, rep, CATS
)
ds_use_visual <- ds_use %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4),
CATS = as.factor(CATS)
) %>%
dplyr::left_join(baseline, by="ID") %>%
dplyr::select(
cate_baseline_level, rep, CATS
)
alluvial_ts(dat=ds_use_visual, wave = .4, border=NA)
ds_use_visual <- ds_use %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4),
CATS = as.integer(CATS)
) %>%
dplyr::left_join(baseline, by="ID") %>%
dplyr::select(
cate_baseline_level, rep, CATS
)
alluvial_ts(dat=ds_use_visual, wave = .4, border=NA)
ds_use_visual <- ds_use %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4),
CATS = dplyr::if_else(is.na(CATS), 0, CATS)
) %>%
dplyr::left_join(baseline, by="ID") %>%
dplyr::select(
cate_baseline_level, rep, CATS
)
alluvial_ts(dat=ds_use_visual, wave = .4, border=NA)
alluvial_ts(dat=ds_use_visual, wave = .4, alpha = 0.6)
#-----visual----------------------
baseline <- ds_use2 %>%
dplyr::filter(rep=="wave_1") %>%
dplyr::select(ID, CATS) %>%
dplyr::mutate(
cate_baseline_level = dplyr::if_else(CATS >= 28, "baseline high", "baseline low")
) %>%
dplyr::select(-CATS)
ds_use_visual <- ds_use %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4),
CATS = dplyr::if_else(is.na(CATS), 0, CATS)
) %>%
dplyr::left_join(baseline, by="ID") %>%
dplyr::select(
cate_baseline_level, rep, CATS
)
alluvial_ts(dat=ds_use_visual, wave = .4)
View(ds_use_visual)
alluvial_ts(dat=ds_use_visual, wave = .4,
col = ds_use_visual$cate_baseline_level == "baseline high", "#ff0000", "#D3D3D3")
alluvial_ts(dat=ds_use_visual, wave = .4,
col = ifelse(ds_use_visual$cate_baseline_level == "baseline high", "#ff0000", "#D3D3D3"))
alluvial_ts(dat=ds_use_visual, wave = .4,
col = cate_baseline_level)
alluvial_ts(dat=ds_use_visual, wave = .4,
col = ds_use_visual$cate_baseline_level)
color <-c(
"baseline high" = "#ff0000",
"baseline low"  = "#D3D3D3"
)
alluvial_ts(dat=ds_use_visual, wave = .4,
col = color)
alluvial_ts(dat=ds_use_visual,
col = color)
ds_use_visual <- ds_use %>%
dplyr::mutate(
rep = dplyr::recode(rep,"wave_1" = 1,
"wave_2" = 2,
"wave_3" = 3,
"wave_4" = 4),
CATS = dplyr::if_else(is.na(CATS), 0, CATS)
) %>%
dplyr::left_join(baseline, by="ID") %>%
dplyr::select(
cate_baseline_level, rep, CATS
)
alluvial_ts(dat=ds_use_visual,
col = color)
alluvial_ts(dat=ds_use_visual, wave = 1.4,
col = color)
alluvial_ts(dat=ds_use_visual, wave = 1,
col = color)
alluvial_ts(dat=ds_use_visual, wave = 0.6,
col = color)
alluvial_ts(dat=ds_use_visual, wave = 0.6,cex = 0.7
col = color)
alluvial_ts(dat=ds_use_visual, wave = 0.6,ygap = 5, lwd = 3,
col = color)
alluvial_ts(dat=ds_use_visual, wave = 0.6, lwd = 3,
col = color)
alluvial_ts(dat=ds_use_visual, wave = 0.6, lwd = 0,
col = color)
alluvial_ts(dat=ds_use_visual, wave = 0.6, lwd = 0.1,
col = color)
alluvial_ts(dat=ds_use_visual, wave = 0.6, lwd = 0.1,ygap=1.5,
col = color)
alluvial_ts(dat=ds_use_visual, wave = 0.6, lwd = 0.1,ygap=1.5, alpha = 0.4
col = color)
alluvial_ts(dat=ds_use_visual, wave = 0.6, lwd = 0.1,ygap=1.5, alpha = 0.4,
col = color)
alluvial_ts(dat=ds_use_visual, wave = 0.6, lwd = 0.1,ygap=1.5, alpha = 0.8,
col = color)
